{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst countSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    incrementby2(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    decrementby2(state, action) {\n      state.counter = state.counter - action.payload;\n    },\n    incrementby5(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    decrementby5(state, action) {\n      state.counter = state.counter - action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n/*const countReducer=(state={counter:0},action)=>{\r\n    if(action.type==='incrementby2'){\r\n        return {\r\n        counter:state.counter+2\r\n        }\r\n    }\r\n    if(action.type==='decrementby2'){\r\n        return{\r\n            counter:state.counter-2\r\n        }\r\n    }\r\n    if(action.type==='decrementby5'){\r\n        return{\r\n            counter:state.counter-5\r\n        }\r\n    }\r\n    if(action.type==='incrementby5'){\r\n        return {\r\n        counter:state.counter+5\r\n        }\r\n    }\r\n    return state;\r\n\r\n}*/\nconst store = configureStore({\n  reducer: {\n    counter: countSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = countSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","countSlice","name","reducers","incrementby2","state","action","payload","decrementby2","incrementby5","decrementby5","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/Admin/Desktop/redux/redux-basics/redux-basics/src/Store/index.js"],"sourcesContent":["import {createStore} from 'redux';\r\nimport {createSlice,configureStore} from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\nconst countSlice=createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers:{\r\n        incrementby2(state,action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        decrementby2(state,action) {\r\n            state.counter = state.counter - action.payload;\r\n        },\r\n        incrementby5(state,action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        decrementby5(state,action) {\r\n            state.counter = state.counter - action.payload;\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n          }\r\n    }\r\n    \r\n\r\n})\r\nconst initialAuthState = {\r\n    isAuthenticated: false,\r\n  };\r\n  \r\n  const authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n      login(state) {\r\n        state.isAuthenticated = true;\r\n      },\r\n      logout(state) {\r\n        state.isAuthenticated = false;\r\n      },\r\n    },\r\n  });\r\n/*const countReducer=(state={counter:0},action)=>{\r\n    if(action.type==='incrementby2'){\r\n        return {\r\n        counter:state.counter+2\r\n        }\r\n    }\r\n    if(action.type==='decrementby2'){\r\n        return{\r\n            counter:state.counter-2\r\n        }\r\n    }\r\n    if(action.type==='decrementby5'){\r\n        return{\r\n            counter:state.counter-5\r\n        }\r\n    }\r\n    if(action.type==='incrementby5'){\r\n        return {\r\n        counter:state.counter+5\r\n        }\r\n    }\r\n    return state;\r\n\r\n}*/\r\nconst store = configureStore({\r\n    reducer: {counter: countSlice.reducer, auth: authSlice.reducer}\r\n  });\r\n  \r\n  export const counterActions = countSlice.actions;\r\n  export const authActions = authSlice.actions;\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,EAACC,cAAc,QAAO,kBAAkB;AAG3D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,UAAU,GAACL,WAAW,CAAC;EACzBM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAC;IACLC,YAAYA,CAACC,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,YAAYA,CAACH,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAClD,CAAC;IACDE,YAAYA,CAACJ,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAClD,CAAC;IACDG,YAAYA,CAACL,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAClD,CAAC;IACDI,aAAaA,CAACN,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACN;AAGJ,CAAC,CAAC;AACF,MAAMY,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC5BM,IAAI,EAAE,gBAAgB;EACtBJ,YAAY,EAAEc,gBAAgB;EAC9BT,QAAQ,EAAE;IACRY,KAAKA,CAACV,KAAK,EAAE;MACXA,KAAK,CAACQ,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDG,MAAMA,CAACX,KAAK,EAAE;MACZA,KAAK,CAACQ,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAACnB,OAAO,EAAEE,UAAU,CAACiB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAO;AAChE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGnB,UAAU,CAACoB,OAAO;AAChD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAC9C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}